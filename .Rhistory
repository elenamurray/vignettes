vig_id <- df$vig_id[i]
title <- df$title[i]
actor_message <- df$actor_message_split[i]
type_message <- df$type_message_split[i]
scale_message <- df$scale_message_split[i]
# Select the correct image for the scenario
base_img <- switch(scenario,
park = park_img,
shopping = shopping_img,
stadium = stadium_img)
# Define specific text locations for each scenario
text_locations <- list(
park = "+500+180",       # Position for park image
shopping = "+250+400",   # Position for shopping image
stadium = "+500+300"     # Position for stadium image
)
# Get the specific text location for the current scenario
text_location <- text_locations[[scenario]]
# Compose the text for the vignette
vignette_text <- paste(title, "\n",
actor_message, "\n",
type_message, "\n",
scale_message, sep = "")
# Create the image with annotated text
vignette_img <- base_img %>%
image_annotate(vignette_text, size = 35, color = "black", location = text_location, font = "Helvetica")
# Create a unique file name
file_name <- paste0(output_dir, "/", scenario, "_", vig_id, ".png")
# Save the vignette image
image_write(vignette_img, path = file_name, format = "png")
}
message("Vignette images created successfully in: ", output_dir)
}
# Example usage
# Load your vignette universe dataframe (replace with your actual dataframe loading code)
# vignettes_universe_df <- read.csv("path_to_your_vignette_universe.csv")
# Run the function
create_vignette_images(vignettes_universe)
create_vignette_images <- function(df, output_dir = "vignettes_images") {
# Create the output directory if it doesn't exist
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
# Iterate over each row in the dataframe to create images
for (i in seq_len(nrow(df))) {
# Extract row data
scenario <- df$scenario[i]
vig_id <- df$vig_id[i]
title <- df$title[i]
actor_message <- df$actor_message_split[i]
type_message <- df$type_message_split[i]
scale_message <- df$scale_message_split[i]
# Select the correct image for the scenario
base_img <- switch(scenario,
park = park_img,
shopping = shopping_img,
stadium = stadium_img)
# Define specific text locations for each scenario
text_locations <- list(
park = "+500+180",       # Position for park image
shopping = "+250+400",   # Position for shopping image
stadium = "+500+300"     # Position for stadium image
)
# Get the specific text location for the current scenario
text_location <- text_locations[[scenario]]
# Compose the text for the vignette
vignette_text <- paste(title, "\n",
actor_message, "\n",
type_message, "\n",
scale_message, sep = "")
# Create the image with annotated text
vignette_img <- base_img %>%
image_annotate(vignette_text, size = 32, color = "black", location = text_location, font = "Helvetica")
# Create a unique file name
file_name <- paste0(output_dir, "/", scenario, "_", vig_id, ".png")
# Save the vignette image
image_write(vignette_img, path = file_name, format = "png")
}
message("Vignette images created successfully in: ", output_dir)
}
# Example usage
# Load your vignette universe dataframe (replace with your actual dataframe loading code)
# vignettes_universe_df <- read.csv("path_to_your_vignette_universe.csv")
# Run the function
create_vignette_images(vignettes_universe)
create_vignette_images <- function(df, output_dir = "vignettes_images") {
# Create the output directory if it doesn't exist
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
# Iterate over each row in the dataframe to create images
for (i in seq_len(nrow(df))) {
# Extract row data
scenario <- df$scenario[i]
vig_id <- df$vig_id[i]
title <- df$title[i]
actor_message <- df$actor_message_split[i]
type_message <- df$type_message_split[i]
scale_message <- df$scale_message_split[i]
# Select the correct image for the scenario
base_img <- switch(scenario,
park = park_img,
shopping = shopping_img,
stadium = stadium_img)
# Define specific text locations for each scenario
text_locations <- list(
park = "+500+180",       # Position for park image
shopping = "+500+180",   # Position for shopping image
stadium = "+500+200"     # Position for stadium image
)
# Get the specific text location for the current scenario
text_location <- text_locations[[scenario]]
# Compose the text for the vignette
vignette_text <- paste(title, "\n",
actor_message, "\n",
type_message, "\n",
scale_message, sep = "")
# Create the image with annotated text
vignette_img <- base_img %>%
image_annotate(vignette_text, size = 32, color = "black", location = text_location, font = "Helvetica")
# Create a unique file name
file_name <- paste0(output_dir, "/", scenario, "_", vig_id, ".png")
# Save the vignette image
image_write(vignette_img, path = file_name, format = "png")
}
message("Vignette images created successfully in: ", output_dir)
}
# Run the function
create_vignette_images(vignettes_universe)
# Function to create vignette images
create_vignette_images <- function(df, output_dir = "vignettes_images") {
# Create the output directory if it doesn't exist
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
# Iterate over each row in the dataframe to create images
for (i in seq_len(nrow(df))) {
# Extract row data
scenario <- df$scenario[i]
vig_id <- df$vig_id[i]
title <- df$title[i]
actor_message <- df$actor_message_split[i]
type_message <- df$type_message_split[i]
scale_message <- df$scale_message_split[i]
# Select the correct image for the scenario
base_img <- switch(scenario,
park = park_img,
shopping = shopping_img,
stadium = stadium_img)
# Define specific text locations for each scenario
text_locations <- list(
park = "+500+180",       # Position for park image
shopping = "+600+180",   # Position for shopping image
stadium = "+500+200"     # Position for stadium image
)
# Get the specific text location for the current scenario
text_location <- text_locations[[scenario]]
# Compose the text for the vignette
vignette_text <- paste(title, "\n",
actor_message, "\n",
type_message, "\n",
scale_message, sep = "")
# Create the image with annotated text
vignette_img <- base_img %>%
image_annotate(vignette_text, size = 32, color = "black", location = text_location, font = "Helvetica")
# Create a unique file name
file_name <- paste0(output_dir, "/", scenario, "_", vig_id, ".png")
# Save the vignette image
image_write(vignette_img, path = file_name, format = "png")
}
message("Vignette images created successfully in: ", output_dir)
}
# Example usage
# Load your vignette universe dataframe (replace with your actual dataframe loading code)
# vignettes_universe_df <- read.csv("path_to_your_vignette_universe.csv")
# Run the function
create_vignette_images(vignettes_universe)
create_vignette_images <- function(df, output_dir = "vignettes_images") {
# Create the output directory if it doesn't exist
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
# Iterate over each row in the dataframe to create images
for (i in seq_len(nrow(df))) {
# Extract row data
scenario <- df$scenario[i]
vig_id <- df$vig_id[i]
title <- df$title[i]
actor_message <- df$actor_message_split[i]
type_message <- df$type_message_split[i]
scale_message <- df$scale_message_split[i]
# Select the correct image for the scenario
base_img <- switch(scenario,
park = park_img,
shopping = shopping_img,
stadium = stadium_img)
# Define specific text locations for each scenario
text_locations <- list(
park = "+500+180",       # Position for park image
shopping = "+650+190",   # Position for shopping image
stadium = "+500+200"     # Position for stadium image
)
# Get the specific text location for the current scenario
text_location <- text_locations[[scenario]]
# Compose the text for the vignette
vignette_text <- paste(title, "\n",
actor_message, "\n",
type_message, "\n",
scale_message, sep = "")
# Create the image with annotated text
vignette_img <- base_img %>%
image_annotate(vignette_text, size = 32, color = "black", location = text_location, font = "Helvetica")
# Create a unique file name
file_name <- paste0(output_dir, "/", scenario, "_", vig_id, ".png")
# Save the vignette image
image_write(vignette_img, path = file_name, format = "png")
}
message("Vignette images created successfully in: ", output_dir)
}
# Example usage
# Load your vignette universe dataframe (replace with your actual dataframe loading code)
# vignettes_universe_df <- read.csv("path_to_your_vignette_universe.csv")
# Run the function
create_vignette_images(vignettes_universe)
### prepare decks / vignette ids data frame for qualtrics ---------------------------------------
#Extract vignette ids
vignette_ids_list <- map(vignettes_universe[[i]], extract, "vig_id")
vignette_ids_list <- map(vignettes_universe, extract, "vig_id")
View(vignette_ids_list)
rm(vignette_ids_list)
View(vignettes_universe)
#Add text to images
# Function to create vignette images
create_vignette_images <- function(df, output_dir = "vignettes_images") {
# Create the output directory if it doesn't exist
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
# Iterate over each row in the dataframe to create images
for (i in seq_len(nrow(df))) {
# Extract row data
scenario <- df$scenario[i]
vig_id <- df$vig_id[i]
title <- df$title[i]
actor_message <- df$actor_message_split[i]
type_message <- df$type_message_split[i]
scale_message <- df$scale_message_split[i]
# Select the correct image for the scenario
base_img <- switch(scenario,
park = park_img,
shopping = shopping_img,
stadium = stadium_img)
# Define specific text locations for each scenario
text_locations <- list(
park = "+500+180",       # Position for park image
shopping = "+650+190",   # Position for shopping image
stadium = "+500+200"     # Position for stadium image
)
# Get the specific text location for the current scenario
text_location <- text_locations[[scenario]]
# Compose the text for the vignette
vignette_text <- paste(title, "\n",
actor_message, "\n",
type_message, "\n",
scale_message, sep = "")
# Create the image with annotated text
vignette_img <- base_img %>%
image_annotate(vignette_text, size = 32, color = "black", location = text_location, font = "Helvetica")
# Create a unique file name
file_name <- paste0(output_dir, "/", vig_id, ".png")
# Save the vignette image
image_write(vignette_img, path = file_name, format = "png")
}
message("Vignette images created successfully in: ", output_dir)
}
# Run the function
create_vignette_images(vignettes_universe)
View(park_vignettes_text)
park_vignettes <- vignettes_universe %>% filter(scenario == "park") %>% pull(vig_id)
shopping_vignettes <- vignettes_universe %>% filter(scenario == "shopping") %>% pull(vig_id)
stadium_vignettes <- vignettes_universe %>% filter(scenario == "stadium") %>% pull(vig_id)
deck_combinations <- expand.grid(
park = park_vignettes,
shopping = shopping_vignettes,
stadium = stadium_vignettes,
stringsAsFactors = FALSE
)
View(deck_combinations)
generate_link <- function(scenario, vig_id) {
paste0("https://github.com/elenamurray/vignettes", scenario, "/", vig_id, ".jpg")
}
deck_combinations <- deck_combinations %>%
mutate(
park_image = paste0(park, ".jpg"),
shopping_image = paste0(shopping, ".jpg"),
stadium_image = paste0(stadium, ".jpg"),
park_link = generate_link("park", park),
shopping_link = generate_link("shopping", shopping),
stadium_link = generate_link("stadium", stadium),
deck_id = paste0("deck_", row_number())
)
deck_combinations <- deck_combinations %>%
select(deck_id, park, park_image, park_link, shopping, shopping_image, shopping_link, stadium, stadium_image, stadium_link)
# Save the result to an Excel file
write_xlsx(deck_combinations, "vignettes/rdata/qualtrics_deck_combinations.xlsx")
message("Deck combinations saved to: vignettes/rdata/qualtrics_deck_combinations.xlsx")
# Save the result to an Excel file
write_xlsx(deck_combinations, "vignettes/rdata/qualtrics_deck_combinations.xlsx")
library(writexl)
# Save the result to an Excel file
write_xlsx(deck_combinations, "vignettes/rdata/qualtrics_deck_combinations.xlsx")
View(deck_combinations)
#export
save(deck_combinations,
file = "vignettes/rdata/deck_vignette_list.RDa")
setwd("/Users/elenamurray/Documents/Documents/HERTIE MASTERS/Semester 4/Thesis/build-vignettes-elena")
save(deck_combinations,
file = "vignettes/rdata/deck_vignette_list.RDa")
save(deck_combinations,
file = "/vignettes/rdata/deck_vignette_list.RDa")
save(deck_combinations,
file = "vignettes/deck_vignette_list.RDa")
load("vignettes/deck_vignette_ids_img_list.RDa")
load("vignettes/deck_vignette_list.RDa")
qualtrics_links_df <- deck_combinations %>%
select(park_link, shopping_link, stadium_link) %>%
rename(
`vig_1 (link)` = park_link,
`vig_2 (link)` = shopping_link,
`vig_3 (link)` = stadium_link
)
save(deck_combinations,
file = "vignettes/deck_vignette_list.xlsx")
# Display the first few rows to confirm
print(head(qualtrics_links_df))
View(qualtrics_links_df)
View(deck_combinations)
#save a test version with fewer rows:
save(head(deck_combinations, 150),
file = "vignettes/deck_vignette_list_150.xlsx")
# Save the transformed dataframe to Excel
#export
write_xlsx(qualtrics_links_df, "vignettes/deck_vignette_list.xlsx")
#shorter test version
write_xlsx(head(qualtrics_links_df, 150), "vignettes/deck_vignette_list_150.xlsx")
# Generate image paths and Qualtrics links
generate_link <- function(scenario, vig_id) {
paste0("https://github.com/elenamurray/vignettes/blob/main/vignettes-images", "/", vig_id, ".png")
}
deck_combinations <- deck_combinations %>%
mutate(
park_image = paste0(park, ".jpg"),
shopping_image = paste0(shopping, ".jpg"),
stadium_image = paste0(stadium, ".jpg"),
park_link = generate_link("park", park),
shopping_link = generate_link("shopping", shopping),
stadium_link = generate_link("stadium", stadium),
deck_id = paste0("deck_", row_number())
)
# Reorder columns for clarity
deck_combinations <- deck_combinations %>%
select(deck_id, park, park_image, park_link, shopping, shopping_image, shopping_link, stadium, stadium
# Transform the deck_combinations dataframe
qualtrics_links_df <- deck_combinations %>%
qualtrics_links_df <- deck_combinations %>%
select(park_link, shopping_link, stadium_link) %>%
rename(
`vig_1 (link)` = park_link,
`vig_2 (link)` = shopping_link,
`vig_3 (link)` = stadium_link
)
# Save the transformed dataframe to Excel
#export
write_xlsx(qualtrics_links_df, "vignettes/deck_vignette_list.xlsx")
#shorter test version
write_xlsx(head(qualtrics_links_df, 150), "vignettes/deck_vignette_list_150.xlsx")
# Generate image paths and Qualtrics links
generate_link <- function(scenario, vig_id) {
paste0("https://github.com/elenamurray/vignettes/blob/main/vignettes_images", "/", vig_id, ".png")
}
deck_combinations <- deck_combinations %>%
mutate(
park_image = paste0(park, ".jpg"),
shopping_image = paste0(shopping, ".jpg"),
stadium_image = paste0(stadium, ".jpg"),
park_link = generate_link("park", park),
shopping_link = generate_link("shopping", shopping),
stadium_link = generate_link("stadium", stadium),
deck_id = paste0("deck_", row_number())
)
# Reorder columns for clarity
deck_combinations <- deck_combinations %>%
select(deck_id, park, park_image, park_link, shopping, shopping_image, shopping_link, stadium, stadium_image, stadium_link)
qualtrics_links_df <- deck_combinations %>%
select(park_link, shopping_link, stadium_link) %>%
rename(
`vig_1 (link)` = park_link,
`vig_2 (link)` = shopping_link,
`vig_3 (link)` = stadium_link
)
# Save the transformed dataframe to Excel
#export
write_xlsx(qualtrics_links_df, "vignettes/deck_vignette_list.xlsx")
#shorter test version
write_xlsx(head(qualtrics_links_df, 150), "vignettes/deck_vignette_list_150.xlsx")
# import interface pictures
park_img <- image_read("images/park.png")
library(tidyverse)
library(magrittr)
library(readxl)
library(writexl)
library(janitor)
library(magick)
library(summarytools)
library(ragg)
library(magick)
library(dplyr)
library(writexl)
## load packages and functions ------------------
library(tidyverse)
library(magrittr)
library(readxl)
library(writexl)
library(janitor)
library(stringi)
## functions to process vignettes data ---------
## vignettes: content
#Function to wrap text
str_wrap_string <- function(string, width = 65) {
out <- stringi::stri_wrap(string, width = width, whitespace_only = TRUE)
out <- paste(out, collapse = "\n")
return(out)
}
#Function to create vignette text for each scenario
import_vignettes_content <- function(scenario = "park") {
vignettes_content_df <- read_xlsx("messages/test_r_messages.xlsx", sheet = paste0("scenario_", scenario))
vignettes_content_df$scenario <- scenario
vignettes_content_df$title_message_split <- map_chr(vignettes_content_df$title, str_wrap_string, width = 35)
vignettes_content_df$actor_message_split <- map_chr(vignettes_content_df$actor_message, str_wrap_string, width = 35)
vignettes_content_df$type_message_split <- map_chr(vignettes_content_df$type_message, str_wrap_string, width = 35)
vignettes_content_df$scale_message_split <- map_chr(vignettes_content_df$scale_message, str_wrap_string, width = 35)
vignettes_content_df$title_lines <- str_count(vignettes_content_df$title_message_split, fixed("\n")) + 1
vignettes_content_df$actor_lines <- str_count(vignettes_content_df$actor_message_split, fixed("\n")) + 1
vignettes_content_df$type_lines <- str_count(vignettes_content_df$type_message_split, fixed("\n")) + 1
vignettes_content_df$scale_lines <- str_count(vignettes_content_df$scale_message_split, fixed("\n")) + 1
vignettes_content_df$message_combination <- str_c(vignettes_content_df$scenario,
vignettes_content_df$actor,
vignettes_content_df$type,
vignettes_content_df$scale,
sep = "-")
vignettes_content_df$vig_id <- paste(scenario, "vig", seq_len(nrow(vignettes_content_df)), sep = "-")
vignettes_content_df %<>% relocate(scenario, vig_id, message_combination)
return(vignettes_content_df)
}
#Set up park vignettes
park_vignettes_text <- import_vignettes_content(scenario = "park")
#Set up stadium vignettes
stadium_vignettes_text <- import_vignettes_content(scenario = "stadium")
#Set up shopping vignettes
shopping_vignettes_text <- import_vignettes_content(scenario = "shopping")
## generate full vignette data frames ---------------------------------
vignettes_universe <- rbind.data.frame(park_vignettes_text, shopping_vignettes_text, stadium_vignettes_text)
#Save
save(park_vignettes_text, shopping_vignettes_text, stadium_vignettes_text,
vignettes_universe,
file = "vignettes/vignettes_df.RData")
#Add text to images
# Function to create vignette images
create_vignette_images <- function(df, output_dir = "vignettes_images") {
# Create the output directory if it doesn't exist
if (!dir.exists(output_dir)) {
dir.create(output_dir)
}
# Iterate over each row in the dataframe to create images
for (i in seq_len(nrow(df))) {
# Extract row data
scenario <- df$scenario[i]
vig_id <- df$vig_id[i]
title <- df$title[i]
actor_message <- df$actor_message_split[i]
type_message <- df$type_message_split[i]
scale_message <- df$scale_message_split[i]
# Select the correct image for the scenario
base_img <- switch(scenario,
park = park_img,
shopping = shopping_img,
stadium = stadium_img)
# Define specific text locations for each scenario
text_locations <- list(
park = "+500+180",       # Position for park image
shopping = "+650+190",   # Position for shopping image
stadium = "+500+200"     # Position for stadium image
)
# Get the specific text location for the current scenario
text_location <- text_locations[[scenario]]
# Compose the text for the vignette
vignette_text <- paste(title, "\n",
actor_message, "\n",
type_message, "\n",
scale_message, sep = "")
# Create the image with annotated text
vignette_img <- base_img %>%
image_annotate(vignette_text, size = 32, color = "black", location = text_location, font = "Helvetica")
# Create a unique file name
file_name <- paste0(output_dir, "/", vig_id, ".png")
# Save the vignette image
image_write(vignette_img, path = file_name, format = "png")
}
message("Vignette images created successfully in: ", output_dir)
}
# Run the function
create_vignette_images(vignettes_universe)
